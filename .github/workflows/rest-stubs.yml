name: OpenAPI Generator

# Define when the workflow should run
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

# Define the jobs to run
jobs:

  generate-rest-server:
    runs-on: ubuntu-latest  # Define the type of machine to run the job on

    # Define the steps of the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Checks-out your repository under $GITHUB_WORKSPACE

      - name: Generate code
        uses: hatamiarash7/openapi-generator@v0.3.0
        with:
          generator: scala-cask
          openapi-file: service.yaml
          config-file: openapi-config.yaml
          output-dir: target/rest-stubs

  package-rest:
    runs-on: ubuntu-latest  # Define the type of machine to run the job on
    needs: generate-rest-server
    steps:
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v10
        with:
          java-version: 11

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache
            ~/.cache/coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt', '**/project/**/*.scala', '**/project/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-

      - name: Build Project
        run: sbt clean compile test
        working-directory: target/rest-stubs

      - name: Publish JAR to GitHub Packages
        run: sbt publish
        working-directory: target/rest-stubs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}

  build-project:
    runs-on: ubuntu-latest  # Define the type of machine to run the job on
    needs: package-rest
    steps:
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v10
        with:
          java-version: 11

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache
            ~/.cache/coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt', '**/project/**/*.scala', '**/project/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-

      - name: Build Project
        run: sbt clean compile test

      - name: Generate Sequence Diagrams
        run: sbt --warn "runMain contract.diagram.generateMermaidDiagram" | tail -n +1
