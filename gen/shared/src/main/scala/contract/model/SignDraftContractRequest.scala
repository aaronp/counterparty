/** Contract Management API API for managing draft contracts
  *
  * OpenAPI spec version: 1.0.0
  *
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator.
  *
  * https://openapi-generator.tech
  */

// this model was generated using model.mustache
package contract.model
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class SignDraftContractRequest(
    /* Reference identifier for counterparty A. */
    referenceA: String,

    /* Reference identifier for counterparty B. */
    referenceB: String
) {

  def asJson: String = asData.asJson

  def asData: SignDraftContractRequestData = {
    SignDraftContractRequestData(
      referenceA = referenceA,
      referenceB = referenceB
    )
  }

}

object SignDraftContractRequest {

  given RW[SignDraftContractRequest] =
    SignDraftContractRequestData.readWriter.bimap[SignDraftContractRequest](_.asData, _.asModel)

  enum Fields(fieldName: String) extends Field(fieldName) {
    case referenceA extends Fields("referenceA")
    case referenceB extends Fields("referenceB")
  }

}
